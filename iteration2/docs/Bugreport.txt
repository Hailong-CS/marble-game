-I didn't successfully implement entity type signal sending. What I have tried is sending a char which characteristic their type as a circle centered at the entity center.  I tend to implement this in arena.cc UpdateEntityTimestep function. However, when the system iterates each entity, the position is constant changing. I couldn’t bounding the circle moving with the entity.
-The sensor proximity calculate the distance between entity itself and the entity appears in its cone view. When the entity moving towards to the entity, the distance should be decreasing. I try to implement this in the sensor_proximity.h as a function. But I couldn’t get it to compile. I think the problem is the  parameters that passing in. Since all the arena entities could be detected in the cone view, I used Arena_Entity the autobot itself as the passing in parameters. I also built a distance calculation friend function in position.h. The compile doesn’t comfortable with this kind of parameters. 
-Autobot could be frozen, however, they will randomly be unfreeze. I tried to print out to see what’s going on, but its too generous for me to find out. Sometimes, the frozen autobot will be unfreeze when the player robot hit other autobot. There are some logics behind the screen I can’t find out.
-The robots will be bouncing around the wall constantly. I think the reasons are the incident angle and the robot speed are to small, and after 1 time step, the robot can not moving out from the wall. Then the second collision check will happen. Thus the robot will be moving back and forth at the wall.
-When the autobot hit the home base, the autobot suppose to become superbot. My thoughts are, at the hitting moment, the system will delete the autobot but save all the information and create a new superbot instead who inherits all those information. This implementation has great effect on coding.  First, I should create superbot class who only has a little difference from the auto bot. Second, I need to add more functions to draw the superbot. Thirdly, I am not sure how to save the information then passing to the superbot. Finally, It’s too difficult to manipulate with nanogui to delete a robot in the window. 
-Distress signal sending is pretty similar with the entity type sensor. My thinking is, again, create another circle that centers the entity’s center, which will send -1 if the autobot is frozen. However, I have the same difficulty to implement this as entity type circle. 
